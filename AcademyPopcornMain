using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace AcademyPopcorn
{
    class AcademyPopcornMain
    {
        const int WorldRows = 23;
        const int WorldCols = 40;
        const int RacketLength = 6;
        const int sleep = 500;

        static void Initialize(Engine engine)
        {
            int startRow = 3;
            int startCol = 2;
            int endCol = WorldCols - 2;

            for (int i = startCol; i < endCol; i++)
            {
                Block currBlock = new Block(new MatrixCoords(startRow, i));

                engine.AddObject(currBlock);
            }

            Ball theBall = new Ball(new MatrixCoords(WorldRows / 2, 0),
                new MatrixCoords(-1, 1));
            engine.AddObject(theBall);

            Racket theRacket = new Racket(new MatrixCoords(WorldRows - 1, WorldCols / 2), RacketLength);
            engine.AddObject(theRacket);
            Racket newRacket = new Racket(new MatrixCoords(WorldRows - 1, WorldCols / 2), RacketLength + 1);
            engine.AddObject(newRacket);
        }

        static void Walls(Engine engine)
        {
            for (int i = 0; i < WorldCols; i++)
            {
                IndestructibleBlock wall = new IndestructibleBlock(new MatrixCoords(0, i));
                engine.AddObject(wall);
            }

            for (int j = 0; j < WorldRows; j++)
            {
                IndestructibleBlock wall = new IndestructibleBlock(new MatrixCoords(j, 0));
                engine.AddObject(wall);
            }
            for (int m = 0; m <WorldRows; m++)
            {
                IndestructibleBlock wall = new IndestructibleBlock(new MatrixCoords(m, WorldCols-1));
                engine.AddObject(wall);
            }
        }

        static void Main(string[] args)
        {
            IRenderer renderer = new ConsoleRenderer(WorldRows, WorldCols);
            IUserInterface keyboard = new KeyboardInterface();

            EngineForShootingRocket gameEngine = new EngineForShootingRocket(renderer, keyboard);

            keyboard.OnLeftPressed += (sender, eventInfo) =>
            {
                gameEngine.MovePlayerRacketLeft();
            };

            keyboard.OnRightPressed += (sender, eventInfo) =>
            {
                gameEngine.MovePlayerRacketRight();
            };
            
            Initialize(gameEngine);
            Walls(gameEngine);

            gameEngine.Run();
        }
    }
}
